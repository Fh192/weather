{"version":3,"sources":["components/Daily/Card/Card.module.css","components/Current/Current.module.css","components/AirQuality/AirQuality.module.css","components/Current/Hourly/Hourly.module.css","components/Astronomy/Astronomy.module.css","components/Header/SearchCity/SearchCity.module.css","components/Main/Main.module.css","components/Header/Header.module.css","components/Daily/Daily.module.css","components/Preloader/Preloader.module.css","hooks/useSelector.ts","assets/search.svg","api/weatherAPI.ts","components/Preloader/Preloader.tsx","store/reducers/weatherParamsSlice.ts","components/Header/SearchCity/SearchCity.tsx","hooks/useOnClickOutside.ts","components/Header/Header.tsx","components/AirQuality/AirQuality.tsx","assets/sun.svg","assets/moonPhases/newMoon.svg","assets/moonPhases/waningCrescent.svg","assets/moonPhases/firstQuarter.svg","assets/moonPhases/waxingGibbous.svg","assets/moonPhases/fullMoon.svg","assets/moonPhases/waningGibbous.svg","assets/moonPhases/lastQuarter.svg","assets/moonPhases/waxingCrescent.svg","components/Astronomy/Astronomy.tsx","services/getMoonIconByPhase.ts","assets/weatherIcons/clear-day.svg","assets/weatherIcons/clear-night.svg","assets/weatherIcons/showers.svg","assets/weatherIcons/heavy-showers.svg","assets/weatherIcons/thunderstorm-showers.svg","assets/weatherIcons/cloudy.svg","assets/weatherIcons/partly-cloudy-day.svg","assets/weatherIcons/partly-cloudy-night.svg","assets/weatherIcons/overcastDay.svg","assets/weatherIcons/fogDay.svg","assets/weatherIcons/fogNight.svg","assets/weatherIcons/sleet.svg","assets/weatherIcons/heavy-sleet.svg","assets/weatherIcons/snow.svg","assets/weatherIcons/heavy-snow.svg","assets/weatherIcons/thunderstorm-snow.svg","services/getWeatherIcon.ts","assets/weatherParamIcons/humidity.svg","assets/weatherParamIcons/pressure.svg","assets/weatherParamIcons/wind.svg","services/getWeatherBackground.ts","assets/arrow.svg","services/transformTemp.ts","components/Current/Hourly/Hour/Hour.tsx","components/Current/Hourly/Hourly.tsx","services/getWeatherCondition.ts","assets/geolocation.svg","components/Current/Current.tsx","components/Daily/Card/Card.tsx","components/Daily/Daily.tsx","components/Main/Main.tsx","hooks/useQuery.ts","components/App.tsx","store/reducers/rootReducer.ts","store/store.ts","index.tsx"],"names":["module","exports","useSelector","useReduxSelector","API_KEY","weatherAPI","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","b","getWeatherForecast","query","coords","days","lat","lon","getAstronomyForecast","search","location","useGetWeatherForecastQuery","useSearchQuery","useGetAstronomyForecastQuery","Preloader","size","color","className","styles","preloader","xmlns","width","height","viewBox","x1","y1","x2","y2","id","stopColor","stopOpacity","offset","fill","fillRule","transform","d","stroke","strokeWidth","attributeName","type","from","to","dur","repeatCount","cx","cy","r","initialState","city","localStorage","getItem","JSON","parse","weatherParamsSlice","createSlice","name","reducers","setCity","state","action","payload","setItem","setCoords","stringify","actions","SearchCity","dispatch","useDispatch","navigate","useNavigate","s","weatherParams","ref","useRef","useState","searchCity","setSearchCity","suggestionsVisible","setSuggestionsVisible","length","data","suggestions","isFetching","useEffect","handler","listener","event","el","current","contains","target","document","addEventListener","removeEventListener","useOnClickOutside","searchCityInput","style","borderRadius","value","placeholder","onChange","e","currentTarget","onClick","src","searchIcon","alt","map","suggestion","window","scrollTo","behavior","top","suggestionSelectHandler","noResults","Header","header","powered","href","rel","title","AirQuality","forecast","last_updated","air_quality","o3","co","no2","so2","date","Date","toLocaleDateString","weekday","day","month","US_EPA_Index","US_EPA_Category","airQuality","main","US_EPA","params","param","toFixed","Astronomy","astronomy","phase","dt","localtime","astro","moon_phase","moonrise","moonset","sunrise","sunset","uv","forecastday","uvIndex","sun","icon","info","moon","newMoon","waningCrescent","firstQuarter","waxingGibbous","fullMoon","waningGibbous","lastQuarter","waxingCrescent","getWeatherIcon","condition","isDay","c","toLowerCase","includes","clearDay","clearNight","overcastDay","fogDay","fogNight","partlyCloudyDay","partlyCloudyNight","cloudy","thunderstormShowers","heavyShowers","rain","heavySleet","sleet","thunderstormSnow","heavySnow","snow","getWeatherBackground","transformTemp","temp","Hour","temp_c","time","text","is_day","locateTime","toLocaleTimeString","hour","minute","Number","dateTime","toISOString","Hourly","hourlyRef","left","right","btnDisabled","setBtnDisabled","hourly","btn","btnLeft","disabled","parseInt","Math","floor","clientWidth","slideSize","ceil","v","arrow","hours","inner","h","key","btnRight","scrollWidth","console","log","getWeatherCondition","Current","country","feelslike_c","wind_kph","pressure_mb","humidity","wind_dir","feelsTemp","wind_mph","isRain","isSnow","isSleet","currentWeather","background","col","navigator","geolocation","getCurrentPosition","latitude","longitude","tempWrap","feelings","feels","windIcon","humidityIcon","pressureIcon","hourlyWrap","Card","getDate","dayParts","filter","getHours","card","weekdayMonth","pressure","precipitation","windchill","precip_mm","windchill_c","dayPart","Fragment","unit","wind","Daily","daily","cards","Main","URLSearchParams","useLocation","get","row","App","split","charAt","toUpperCase","slice","path","element","rootReducer","combineReducers","reducer","store","configureStore","devTools","process","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.a26d089a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2hCH6\",\"header\":\"Card_header__2Cevf\",\"date\":\"Card_date__3j1d1\",\"day\":\"Card_day__2AsVs\",\"weekdayMonth\":\"Card_weekdayMonth__2Tnp7\",\"main\":\"Card_main__1pzSe\",\"title\":\"Card_title__ij0Ih\",\"dayPart\":\"Card_dayPart__2n-Yp\",\"tempWrap\":\"Card_tempWrap__2xX04\",\"temp\":\"Card_temp__gvs4u\",\"icon\":\"Card_icon__16oHL\",\"condition\":\"Card_condition__1HnkT\",\"unit\":\"Card_unit__2xIxR\",\"pressure\":\"Card_pressure__2qwzn\",\"humidity\":\"Card_humidity__mQls5\",\"precipitation\":\"Card_precipitation__tqIBf\",\"windchill\":\"Card_windchill__3YFNK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentWeather\":\"Current_currentWeather__3kuWR\",\"rain\":\"Current_rain__2t_-r\",\"snow\":\"Current_snow__QylHf\",\"header\":\"Current_header__HovoY\",\"col\":\"Current_col__36G8X\",\"location\":\"Current_location__382tB\",\"title\":\"Current_title__ELnKt\",\"time\":\"Current_time__1WfaB\",\"main\":\"Current_main__3-433\",\"tempWrap\":\"Current_tempWrap__2VXh8\",\"temp\":\"Current_temp__tqq0N\",\"icon\":\"Current_icon__3ltnD\",\"feelings\":\"Current_feelings__1oSyL\",\"condition\":\"Current_condition__UyLom\",\"feels\":\"Current_feels__29vqF\",\"params\":\"Current_params__1hIVX\",\"param\":\"Current_param__3j1Hz\",\"hourlyWrap\":\"Current_hourlyWrap__235bj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"airQuality\":\"AirQuality_airQuality__3B6Q8\",\"header\":\"AirQuality_header__3v81M\",\"title\":\"AirQuality_title__35j0j\",\"date\":\"AirQuality_date__3L_g8\",\"main\":\"AirQuality_main__3a1JN\",\"US_EPA\":\"AirQuality_US_EPA__27yf0\",\"US_EPA_Index\":\"AirQuality_US_EPA_Index__2y9uu\",\"US_EPA_Category\":\"AirQuality_US_EPA_Category__Pp5Tf\",\"params\":\"AirQuality_params__21bnn\",\"param\":\"AirQuality_param__1iEIN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hourly\":\"Hourly_hourly__3aVUN\",\"hour\":\"Hourly_hour__35qsD\",\"time\":\"Hourly_time__NSA_g\",\"icon\":\"Hourly_icon__1PrmW\",\"temp\":\"Hourly_temp__3a9bZ\",\"hours\":\"Hourly_hours__3U_zP\",\"inner\":\"Hourly_inner__NPtp0\",\"btn\":\"Hourly_btn__oOdc4\",\"btnRight\":\"Hourly_btnRight__3YlVU\",\"btnLeft\":\"Hourly_btnLeft__1c5E4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"astronomy\":\"Astronomy_astronomy__1bu40\",\"header\":\"Astronomy_header__2HBjg\",\"title\":\"Astronomy_title__3FnSs\",\"date\":\"Astronomy_date__1ZLR3\",\"main\":\"Astronomy_main__2Y-o7\",\"sun\":\"Astronomy_sun__22Zt-\",\"moon\":\"Astronomy_moon__1Iz_2\",\"icon\":\"Astronomy_icon__1IIFM\",\"info\":\"Astronomy_info__2wYIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchCity\":\"SearchCity_searchCity__1VcFf\",\"searchCityInput\":\"SearchCity_searchCityInput__3KEwZ\",\"suggestions\":\"SearchCity_suggestions__3Feqm\",\"noResults\":\"SearchCity_noResults__1AGFq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__IMAtv\",\"row\":\"Main_row__3DdTt\",\"col\":\"Main_col__o5m2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2HAIz\",\"powered\":\"Header_powered__3x_ZY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"daily\":\"Daily_daily__3JJak\",\"cards\":\"Daily_cards__2b2SF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2oAtH\"};","import {\r\n  useSelector as useReduxSelector,\r\n  TypedUseSelectorHook,\r\n} from 'react-redux';\r\nimport { RootState } from '../store/store';\r\n\r\nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\r\n","export default __webpack_public_path__ + \"static/media/search.cddcf26e.svg\";","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\nimport {\r\n  IAstronomyResponse,\r\n  ICoords,\r\n  IForecastDays,\r\n  IForecastResponse,\r\n  ISearch,\r\n  IWeatherResponse,\r\n} from '../types';\r\n\r\nconst API_KEY = 'a343e898437e4e44bc3101151211811';\r\n\r\nexport const weatherAPI = createApi({\r\n  reducerPath: 'weatherAPI',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://api.weatherapi.com/v1/' }),\r\n  endpoints: b => ({\r\n    getWeatherForecast: b.query<\r\n      IForecastResponse,\r\n      { coords: ICoords; days?: IForecastDays }\r\n    >({\r\n      query: ({ coords, days = 3 }) =>\r\n        `forecast.json?key=${API_KEY}&q=${`${coords.lat} ${coords.lon}`}&days=${days}&aqi=yes`,\r\n    }),\r\n    getAstronomyForecast: b.query<IAstronomyResponse, ICoords>({\r\n      query: coords =>\r\n        `http://api.weatherapi.com/v1/astronomy.json?key=${API_KEY}&q=${`${coords.lat} ${coords.lon}`}`,\r\n    }),\r\n    search: b.query<ISearch[], string>({\r\n      query: location => `search.json?key=${API_KEY}&q=${location}`,\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetWeatherForecastQuery,\r\n  useSearchQuery,\r\n  useGetAstronomyForecastQuery,\r\n} = weatherAPI;\r\n","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\n\r\nexport const Preloader: React.FC<{ size?: string; color?: string }> = ({\r\n  size = '50px',\r\n  color = '#ECEEF2',\r\n}) => {\r\n  return (\r\n    <div className={styles.preloader}>\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        width={size}\r\n        height={size}\r\n        viewBox='0 0 38 38'\r\n      >\r\n        <defs>\r\n          <linearGradient\r\n            x1='8.042%'\r\n            y1='0%'\r\n            x2='65.682%'\r\n            y2='23.865%'\r\n            id={color}\r\n          >\r\n            <stop stopColor={color} stopOpacity='0' offset='0%' />\r\n            <stop stopColor={color} stopOpacity='.631' offset='63.146%' />\r\n            <stop stopColor={color} offset='100%' />\r\n          </linearGradient>\r\n        </defs>\r\n        <g fill='none' fillRule='evenodd'>\r\n          <g transform='translate(1 1)'>\r\n            <path\r\n              d='M36 18c0-9.94-8.06-18-18-18'\r\n              id='Oval-2'\r\n              stroke={`url(#${color})`}\r\n              strokeWidth='2'\r\n            >\r\n              <animateTransform\r\n                attributeName='transform'\r\n                type='rotate'\r\n                from='0 18 18'\r\n                to='360 18 18'\r\n                dur='0.9s'\r\n                repeatCount='indefinite'\r\n              />\r\n            </path>\r\n            <circle fill='#fff' cx='36' cy='18' r='1'>\r\n              <animateTransform\r\n                attributeName='transform'\r\n                type='rotate'\r\n                from='0 18 18'\r\n                to='360 18 18'\r\n                dur='0.9s'\r\n                repeatCount='indefinite'\r\n              />\r\n            </circle>\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { ICoords } from '../../types';\r\n\r\nconst initialState = {\r\n  city: localStorage.getItem('city') || 'moscow',\r\n  coords: JSON.parse(\r\n    localStorage.getItem('coords') || '{ \"lat\": 55.75, \"lon\": 37.62 }'\r\n  ) as ICoords,\r\n};\r\n\r\nexport const weatherParamsSlice = createSlice({\r\n  name: 'weatherParams',\r\n  initialState,\r\n  reducers: {\r\n    setCity: (state, action: PayloadAction<string>) => {\r\n      state.city = action.payload;\r\n      localStorage.setItem('city', action.payload);\r\n    },\r\n    setCoords: (state, action: PayloadAction<ICoords>) => {\r\n      state.coords = action.payload;\r\n      localStorage.setItem('coords', JSON.stringify(action.payload));\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setCity, setCoords } = weatherParamsSlice.actions;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport s from './SearchCity.module.css';\r\nimport searchIcon from '../../../assets/search.svg';\r\nimport { useSearchQuery } from '../../../api/weatherAPI';\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside';\r\nimport { Preloader } from '../../Preloader/Preloader';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCity, setCoords } from '../../../store/reducers/weatherParamsSlice';\r\nimport { useNavigate } from 'react-router';\r\nimport { ICoords } from '../../../types';\r\nimport { useSelector } from '../../../hooks/useSelector';\r\n\r\nexport const SearchCity: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const { lat, lon } = useSelector(s => s.weatherParams.coords);\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const [searchCity, setSearchCity] = useState('');\r\n  const [suggestionsVisible, setSuggestionsVisible] = useState(false);\r\n\r\n  const { data: suggestions = [], isFetching } = useSearchQuery(\r\n    searchCity.length >= 3 ? searchCity : `${lat} ${lon}`\r\n  );\r\n\r\n  const inputClickHandler = () => {\r\n    if (!!suggestions.length) {\r\n      setSuggestionsVisible(true);\r\n    }\r\n  };\r\n\r\n  const suggestionSelectHandler = (suggestion: string, coords: ICoords) => {\r\n    const { lon, lat } = coords;\r\n    navigate({ search: `?lat=${lat}&lon=${lon}` });\r\n\r\n    dispatch(setCity(suggestion));\r\n    dispatch(setCoords(coords));\r\n\r\n    setSearchCity('');\r\n    setSuggestionsVisible(false);\r\n    window.scrollTo({ behavior: 'smooth', top: 0 });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!!suggestions.length) {\r\n      setSuggestionsVisible(true);\r\n    }\r\n  }, [suggestions]);\r\n\r\n  useEffect(() => {\r\n    if (!searchCity.length) {\r\n      setSuggestionsVisible(false);\r\n    }\r\n  }, [searchCity, suggestionsVisible]);\r\n\r\n  useOnClickOutside(ref, () => setSuggestionsVisible(false));\r\n\r\n  return (\r\n    <div className={s.searchCity} ref={ref}>\r\n      <div\r\n        className={s.searchCityInput}\r\n        style={{\r\n          borderRadius: `8px 8px ${suggestionsVisible ? '0 0' : '8px 8px'}`,\r\n        }}\r\n      >\r\n        <input\r\n          type='text'\r\n          value={searchCity}\r\n          placeholder='Search city'\r\n          onChange={e => setSearchCity(e.currentTarget.value)}\r\n          onClick={inputClickHandler}\r\n        />\r\n        <img src={searchIcon} alt='search' />\r\n      </div>\r\n      {suggestionsVisible && (\r\n        <ul className={s.suggestions}>\r\n          {!isFetching ? (\r\n            !!suggestions.length ? (\r\n              suggestions.map(s => (\r\n                <li\r\n                  key={s.id}\r\n                  onClick={() =>\r\n                    suggestionSelectHandler(s.name, { lat: s.lat, lon: s.lon })\r\n                  }\r\n                >\r\n                  {s.name}\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <span className={s.noResults}>No results</span>\r\n            )\r\n          ) : (\r\n            <Preloader />\r\n          )}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { RefObject, useEffect } from 'react';\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent;\r\n\r\nexport default function useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void\r\n) {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current;\r\n\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(`mousedown`, listener);\r\n    document.addEventListener(`touchstart`, listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener);\r\n      document.removeEventListener(`touchstart`, listener);\r\n    };\r\n  }, [ref, handler]);\r\n}\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { SearchCity } from './SearchCity/SearchCity';\r\n\r\nexport const Header: React.FC = () => {\r\n  return (\r\n    <header className={s.header}>\r\n      <div className={s.powered}>\r\n        <span>POWERED BY</span>\r\n        <a\r\n          href='https://www.weatherapi.com/'\r\n          target='_blank'\r\n          rel='noreferrer'\r\n          title='Free Weather API'\r\n        >\r\n          <img\r\n            src='//cdn.weatherapi.com/v4/images/weatherapi_logo.png'\r\n            alt='WeatherAPI.com'\r\n          />\r\n        </a>\r\n      </div>\r\n      <SearchCity />\r\n    </header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useGetWeatherForecastQuery } from '../../api/weatherAPI';\r\nimport { useSelector } from '../../hooks/useSelector';\r\nimport s from './AirQuality.module.css';\r\n\r\nexport const AirQuality: React.FC = () => {\r\n  const { coords } = useSelector(s => s.weatherParams);\r\n  const { data: forecast } = useGetWeatherForecastQuery({ coords, days: 1 });\r\n\r\n  if (!forecast) return null;\r\n\r\n  const { last_updated, air_quality } = forecast.current;\r\n  const { o3, co, no2, so2 } = air_quality;\r\n\r\n  const date = new Date(last_updated).toLocaleDateString('en', {\r\n    weekday: 'short',\r\n    day: '2-digit',\r\n    month: 'short',\r\n  });\r\n\r\n  const US_EPA_Index = air_quality['us-epa-index'];\r\n  const US_EPA_Category =\r\n    US_EPA_Index === 1\r\n      ? 'Good'\r\n      : US_EPA_Index === 2\r\n      ? 'Moderate'\r\n      : US_EPA_Index === 3\r\n      ? 'Unhealthy'\r\n      : US_EPA_Index === 4\r\n      ? 'Unhealthy'\r\n      : US_EPA_Index === 5\r\n      ? 'Very Unhealthy'\r\n      : 'Hazardous';\r\n\r\n  return (\r\n    <div className={s.airQuality}>\r\n      <div className={s.header}>\r\n        <div className={s.title}>\r\n          <span>Air Quality</span>\r\n        </div>\r\n        <div className={s.date}>\r\n          <span>{date}</span>\r\n        </div>\r\n      </div>\r\n      <div className={s.main}>\r\n        <div className={s.US_EPA}>\r\n          <span>\r\n            US-EPA index —{' '}\r\n            <span className={s.US_EPA_Index}>{US_EPA_Index}</span>\r\n          </span>\r\n          <span>\r\n            Air quality is&nbsp;\r\n            <span className={s.US_EPA_Category}>\r\n              <span>{US_EPA_Category}</span>\r\n            </span>\r\n          </span>\r\n        </div>\r\n        <div className={s.params}>\r\n          <div className={s.param} title='Ozon'>\r\n            <span>\r\n              O<sub>3</sub>\r\n            </span>\r\n            <span>{`${o3.toFixed(1)} (μg/m3)`}</span>\r\n          </div>\r\n          <div className={s.param} title='Nitric oxide'>\r\n            <span>\r\n              NO<sub>2</sub>\r\n            </span>\r\n            <span>{`${no2.toFixed(1)} (μg/m3)`}</span>\r\n          </div>\r\n          <div className={s.param} title='Carbon monoxide'>\r\n            <span>CO</span>\r\n            <span>{`${co.toFixed(1)} (μg/m3)`}</span>\r\n          </div>\r\n          <div className={s.param} title='Sulfur oxide'>\r\n            <span>\r\n              SO<sub>2</sub>\r\n            </span>\r\n            <span>{`${so2.toFixed(1)} (μg/m3)`}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/sun.a4983d8b.svg\";","export default __webpack_public_path__ + \"static/media/newMoon.a693dd00.svg\";","export default __webpack_public_path__ + \"static/media/waningCrescent.7c4d650d.svg\";","export default __webpack_public_path__ + \"static/media/firstQuarter.1ea9ddd9.svg\";","export default __webpack_public_path__ + \"static/media/waxingGibbous.a5d577a9.svg\";","export default __webpack_public_path__ + \"static/media/fullMoon.ea60a0a7.svg\";","export default __webpack_public_path__ + \"static/media/waningGibbous.c96b6096.svg\";","export default __webpack_public_path__ + \"static/media/lastQuarter.3edf767e.svg\";","export default __webpack_public_path__ + \"static/media/waxingCrescent.5c34c1a8.svg\";","import React from 'react';\r\nimport s from './Astronomy.module.css';\r\nimport {\r\n  useGetWeatherForecastQuery,\r\n  useGetAstronomyForecastQuery,\r\n} from '../../api/weatherAPI';\r\nimport { useSelector } from '../../hooks/useSelector';\r\nimport sun from '../../assets/sun.svg';\r\nimport { RootState } from '../../store/store';\r\nimport { getMoonIconByPhase } from '../../services/getMoonIconByPhase';\r\n\r\nexport const Astronomy: React.FC = () => {\r\n  const { coords } = useSelector((s: RootState) => s.weatherParams);\r\n  const { data: forecast } = useGetWeatherForecastQuery({ coords, days: 1 });\r\n  const { data: astronomy } = useGetAstronomyForecastQuery(coords);\r\n\r\n  if (!forecast || !astronomy) return null;\r\n\r\n  const {\r\n    location: { localtime: dt },\r\n    astronomy: {\r\n      astro: { moon_phase, moonrise, moonset, sunrise, sunset },\r\n    },\r\n  } = astronomy;\r\n  const uv = forecast.forecast.forecastday[0].day.uv;\r\n  const date = new Date(dt).toLocaleDateString('en', {\r\n    weekday: 'short',\r\n    day: '2-digit',\r\n    month: 'short',\r\n  });\r\n\r\n  const uvIndex =\r\n    uv >= 9 ? 'Very hight' : uv >= 6 ? 'Hight' : uv >= 3 ? 'Moderate' : 'Low';\r\n\r\n  return (\r\n    <div className={s.astronomy}>\r\n      <div className={s.header}>\r\n        <div className={s.title}>\r\n          <span>Sun and Moon</span>\r\n        </div>\r\n        <div className={s.date}>\r\n          <span>{date}</span>\r\n        </div>\r\n      </div>\r\n      <div className={s.main}>\r\n        <div className={s.sun}>\r\n          <div className={s.icon}>\r\n            <img src={sun} alt='sun' />\r\n          </div>\r\n          <div className={s.info}>\r\n            <div>\r\n              <span>{`Rise — ${sunrise}`}</span>\r\n            </div>\r\n            <div>\r\n              <span>{`Set — ${sunset}`}</span>\r\n            </div>\r\n            <div>\r\n              <span>{`${uvIndex} UV index`}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={s.moon}>\r\n          <div className={s.icon}>\r\n            <img src={getMoonIconByPhase(moon_phase)} alt='moon' />\r\n          </div>\r\n          <div className={s.info}>\r\n            <div>\r\n              <span>{`Rise — ${moonrise}`}</span>\r\n            </div>\r\n            <div>\r\n              <span>{`Set — ${moonset}`}</span>\r\n            </div>\r\n            <div>\r\n              <span>{moon_phase}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { IMoonPhase } from '../types';\r\nimport newMoon from '../assets/moonPhases/newMoon.svg';\r\nimport waningCrescent from '../assets/moonPhases/waningCrescent.svg';\r\nimport firstQuarter from '../assets/moonPhases/firstQuarter.svg';\r\nimport waxingGibbous from '../assets/moonPhases/waxingGibbous.svg';\r\nimport fullMoon from '../assets/moonPhases/fullMoon.svg';\r\nimport waningGibbous from '../assets/moonPhases/waningGibbous.svg';\r\nimport lastQuarter from '../assets/moonPhases/lastQuarter.svg';\r\nimport waxingCrescent from '../assets/moonPhases/waxingCrescent.svg';\r\n\r\nexport const getMoonIconByPhase = (phase: IMoonPhase) => {\r\n  if (phase === 'New Moon') return newMoon;\r\n  if (phase === 'Waning Crescent') return waningCrescent;\r\n  if (phase === 'First Quarter') return firstQuarter;\r\n  if (phase === 'Waxing Gibbous') return waxingGibbous;\r\n  if (phase === 'Full Moon') return fullMoon;\r\n  if (phase === 'Waning Gibbous') return waningGibbous;\r\n  if (phase === 'Last Quarter') return lastQuarter;\r\n  if (phase === 'Waxing Crescent') return waxingCrescent;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/clear-day.5ad96950.svg\";","export default __webpack_public_path__ + \"static/media/clear-night.c8e41eb7.svg\";","export default __webpack_public_path__ + \"static/media/showers.e816c986.svg\";","export default __webpack_public_path__ + \"static/media/heavy-showers.2ef93064.svg\";","export default __webpack_public_path__ + \"static/media/thunderstorm-showers.d8b68465.svg\";","export default __webpack_public_path__ + \"static/media/cloudy.76dce56f.svg\";","export default __webpack_public_path__ + \"static/media/partly-cloudy-day.9d779b8a.svg\";","export default __webpack_public_path__ + \"static/media/partly-cloudy-night.19b47d0b.svg\";","export default __webpack_public_path__ + \"static/media/overcastDay.e9fcce1d.svg\";","export default __webpack_public_path__ + \"static/media/fogDay.c992825c.svg\";","export default __webpack_public_path__ + \"static/media/fogNight.7256712b.svg\";","export default __webpack_public_path__ + \"static/media/sleet.af0cf693.svg\";","export default __webpack_public_path__ + \"static/media/heavy-sleet.bef4d002.svg\";","export default __webpack_public_path__ + \"static/media/snow.9245e81b.svg\";","export default __webpack_public_path__ + \"static/media/heavy-snow.640541a1.svg\";","export default __webpack_public_path__ + \"static/media/thunderstorm-snow.2222a507.svg\";","import clearDay from '../assets/weatherIcons/clear-day.svg';\r\nimport clearNight from '../assets/weatherIcons/clear-night.svg';\r\nimport rain from '../assets/weatherIcons/showers.svg';\r\nimport heavyShowers from '../assets/weatherIcons/heavy-showers.svg';\r\nimport thunderstormShowers from '../assets/weatherIcons/thunderstorm-showers.svg';\r\nimport cloudy from '../assets/weatherIcons/cloudy.svg';\r\nimport partlyCloudyDay from '../assets/weatherIcons/partly-cloudy-day.svg';\r\nimport partlyCloudyNight from '../assets/weatherIcons/partly-cloudy-night.svg';\r\nimport overcastDay from '../assets/weatherIcons/overcastDay.svg';\r\nimport overcastNight from '../assets/weatherIcons/overcastDay.svg';\r\nimport fogDay from '../assets/weatherIcons/fogDay.svg';\r\nimport fogNight from '../assets/weatherIcons/fogNight.svg';\r\nimport sleet from '../assets/weatherIcons/sleet.svg';\r\nimport heavySleet from '../assets/weatherIcons/heavy-sleet.svg';\r\nimport snow from '../assets/weatherIcons/snow.svg';\r\nimport heavySnow from '../assets/weatherIcons/heavy-snow.svg';\r\nimport thunderstormSnow from '../assets/weatherIcons/thunderstorm-snow.svg';\r\n\r\nexport const getWeatherIcon = (condition: string, isDay: 0 | 1 = 1) => {\r\n  const c = condition.toLowerCase();\r\n\r\n  if (c.includes('sunny')) {\r\n    return clearDay;\r\n  } else if (c.includes('clear')) {\r\n    return clearNight;\r\n  } else if (c.includes('overcast')) {\r\n    if (isDay) {\r\n      return overcastDay;\r\n    }\r\n    return overcastNight;\r\n  } else if (c.includes('mist') || c.includes('fog')) {\r\n    if (isDay) {\r\n      return fogDay;\r\n    } else return fogNight;\r\n  } else if (c.includes('cloudy')) {\r\n    if (c.includes('partly')) {\r\n      if (isDay) {\r\n        return partlyCloudyDay;\r\n      } else return partlyCloudyNight;\r\n    }\r\n    return cloudy;\r\n  } else if (c.includes('rain') || c.includes('drizzle')) {\r\n    if (c.includes('thunder')) return thunderstormShowers;\r\n    if (c.includes('heavy') || c.includes('shower')) {\r\n      return heavyShowers;\r\n    }\r\n    return rain;\r\n  } else if (c.includes('sleet')) {\r\n    if (c.includes('heavy')) return heavySleet;\r\n    return sleet;\r\n  } else if (\r\n    c.includes('snow') ||\r\n    c.includes('blizzard') ||\r\n    c.includes('ice')\r\n  ) {\r\n    if (c.includes('thunder')) return thunderstormSnow;\r\n    if (c.includes('heavy')) return heavySnow;\r\n    return snow;\r\n  }\r\n  return cloudy;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/humidity.29e9de15.svg\";","export default __webpack_public_path__ + \"static/media/pressure.56705f47.svg\";","export default __webpack_public_path__ + \"static/media/wind.63f2075c.svg\";","export const getWeatherBackground = (condition: string, isDay: 0 | 1 = 1) => {\r\n  const c = condition.toLowerCase();\r\n\r\n  if (c.includes('sunny')) {\r\n    return 'linear-gradient(to bottom, #4c90f4, #3e9eee)';\r\n  } else if (c.includes('clear')) {\r\n    return 'linear-gradient(to bottom, #2e4686, #375382)';\r\n  } else {\r\n    if (isDay) {\r\n      return 'linear-gradient(to bottom, #4a72ac, #438dcb)';\r\n    }\r\n    return 'linear-gradient(to bottom, #162a62, #16315f)';\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/arrow.efeb1b53.svg\";","export const transformTemp = (temp: number) => {\r\n  return `${temp > 0 ? '+' : ''}${temp}`;\r\n};\r\n","import React from 'react';\r\nimport { getWeatherIcon } from '../../../../services/getWeatherIcon';\r\nimport { transformTemp } from '../../../../services/transformTemp';\r\nimport { IHour } from '../../../../types';\r\nimport s from '../Hourly.module.css';\r\n\r\nexport const Hour: React.FC<IHour> = ({\r\n  temp_c,\r\n  time,\r\n  condition: { text: condition },\r\n  is_day,\r\n}) => {\r\n  const date = new Date(time);\r\n  const locateTime = date.toLocaleTimeString('ru', {\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  });\r\n  const temp = transformTemp(Number(temp_c.toFixed(0)));\r\n\r\n  return (\r\n    <div className={s.hour}>\r\n      <div className={s.time}>\r\n        <time dateTime={date.toISOString()}>{locateTime}</time>\r\n      </div>\r\n      <div className={s.icon}>\r\n        <img src={getWeatherIcon(condition, is_day)} alt={condition} />\r\n      </div>\r\n      <div className={s.temp}>\r\n        <span>{temp}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef, useState } from 'react';\r\nimport s from './Hourly.module.css';\r\nimport arrow from '../../../assets/arrow.svg';\r\nimport { IHour } from '../../../types';\r\nimport { Hour } from './Hour/Hour';\r\n\r\ninterface Props {\r\n  hour: IHour[];\r\n}\r\n\r\nexport const Hourly: React.FC<Props> = ({ hour }) => {\r\n  const hourlyRef = useRef<HTMLDivElement>(null);\r\n  const [btnDisabled, setBtnDisabled] = useState({ left: true, right: false });\r\n\r\n  const sliderLeft = () => {\r\n    if (hourlyRef.current) {\r\n      const right = Number.parseInt(hourlyRef.current.style.right);\r\n      const width = Math.floor(hourlyRef.current.clientWidth);\r\n      const slideSize = 53 * Math.ceil(width / 53);\r\n\r\n      if (right - slideSize <= 53) {\r\n        hourlyRef.current.style.right = `${0}px`;\r\n        setBtnDisabled({ left: true, right: false });\r\n      } else {\r\n        hourlyRef.current.style.right = `${right - slideSize}px`;\r\n        setBtnDisabled(v => ({ ...v, right: false }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const sliderRight = () => {\r\n    if (hourlyRef.current) {\r\n      const right = Number.parseInt(hourlyRef.current.style.right);\r\n      const width = Math.floor(hourlyRef.current.clientWidth);\r\n      const scrollWidth = hourlyRef.current.scrollWidth;\r\n      const slideSize = 53 * Math.ceil(width / 53);\r\n      console.log(slideSize, width);\r\n\r\n      if (right + slideSize + width >= scrollWidth - 53) {\r\n        hourlyRef.current.style.right = `${scrollWidth - width}px`;\r\n        setBtnDisabled({ left: false, right: true });\r\n      } else {\r\n        hourlyRef.current.style.right = `${right + slideSize}px`;\r\n        setBtnDisabled(v => ({ ...v, left: false }));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={s.hourly}>\r\n      <button\r\n        className={`${s.btn} ${s.btnLeft}`}\r\n        disabled={btnDisabled.left}\r\n        onClick={sliderLeft}\r\n      >\r\n        <img src={arrow} alt='slide left' />\r\n      </button>\r\n      <div className={s.hours}>\r\n        <div className={s.inner} style={{ right: '0px' }} ref={hourlyRef}>\r\n          {hour.map(h => (\r\n            <Hour {...h} key={h.time} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <button\r\n        className={`${s.btn} ${s.btnRight}`}\r\n        disabled={btnDisabled.right}\r\n        onClick={sliderRight}\r\n      >\r\n        <img src={arrow} alt='slide right' />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","export const getWeatherCondition = (condition: string) => {\r\n  const c = condition.toLowerCase();\r\n\r\n  if (c.includes('rain') || c.includes('drizzle')) {\r\n    return 'rain';\r\n  } else if (c.includes('snow') || c.includes('ice')) {\r\n    return 'snow';\r\n  } else if (c.includes('sleet')) return 'sleet';\r\n};\r\n","export default __webpack_public_path__ + \"static/media/geolocation.3e9315e8.svg\";","import React from 'react';\r\nimport { useGetWeatherForecastQuery } from '../../api/weatherAPI';\r\nimport { Preloader } from '../Preloader/Preloader';\r\nimport s from './Current.module.css';\r\nimport { getWeatherIcon } from '../../services/getWeatherIcon';\r\nimport humidityIcon from '../../assets/weatherParamIcons/humidity.svg';\r\nimport pressureIcon from '../../assets/weatherParamIcons/pressure.svg';\r\nimport windIcon from '../../assets/weatherParamIcons/wind.svg';\r\nimport { getWeatherBackground } from '../../services/getWeatherBackground';\r\nimport { Hourly } from './Hourly/Hourly';\r\nimport { useSelector } from '../../hooks/useSelector';\r\nimport { getWeatherCondition } from '../../services/getWeatherCondition';\r\nimport geolocation from '../../assets/geolocation.svg';\r\nimport { setCity, setCoords } from '../../store/reducers/weatherParamsSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\nimport { transformTemp } from '../../services/transformTemp';\r\n\r\nexport const Current: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const { coords } = useSelector(s => s.weatherParams);\r\n  const { data: forecast, isFetching } = useGetWeatherForecastQuery({\r\n    coords,\r\n    days: 1,\r\n  });\r\n\r\n  if (!forecast) return null;\r\n  const {\r\n    location: { name, country },\r\n    current: {\r\n      last_updated,\r\n      temp_c,\r\n      condition: { text: condition = 'sleet' },\r\n      feelslike_c,\r\n      is_day,\r\n      wind_kph,\r\n      pressure_mb,\r\n      humidity,\r\n      wind_dir,\r\n    },\r\n  } = forecast;\r\n  const { hour } = forecast.forecast.forecastday[0];\r\n  const date = new Date(last_updated);\r\n  const time = date.toLocaleTimeString('en', {\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  });\r\n  const temp = transformTemp(temp_c);\r\n  const feelsTemp = transformTemp(feelslike_c);\r\n  const wind_mph = (wind_kph / 3.6).toFixed(1);\r\n\r\n  const isRain = getWeatherCondition(condition) === 'rain';\r\n  const isSnow = getWeatherCondition(condition) === 'snow';\r\n  const isSleet = getWeatherCondition(condition) === 'sleet';\r\n\r\n  const getLocation = () => {\r\n    navigator.geolocation.getCurrentPosition(({ coords }) => {\r\n      const { latitude, longitude } = coords;\r\n      dispatch(setCoords({ lat: latitude, lon: longitude }));\r\n      dispatch(setCity(name));\r\n      navigate({ search: `?lat=${latitude}&lon=${longitude}` });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={s.currentWeather}\r\n      style={{ background: getWeatherBackground(condition, is_day) }}\r\n    >\r\n      {!isFetching ? (\r\n        <>\r\n          {(isRain || isSleet) && <div className={s.rain} />}\r\n          {(isSnow || isSleet) && <div className={s.snow} />}\r\n          <div className={s.header}>\r\n            <div className={s.col}>\r\n              <div className={s.title}>\r\n                <span>{`${name}, ${country}`}</span>\r\n              </div>\r\n              <div className={s.time}>\r\n                <span>Now</span>\r\n                <time dateTime={date.toISOString()}>{time}</time>\r\n              </div>\r\n            </div>\r\n            <div className={s.location} onClick={getLocation}>\r\n              <img src={geolocation} alt='your location' />\r\n            </div>\r\n          </div>\r\n          <div className={s.main}>\r\n            <div className={s.tempWrap}>\r\n              <div className={s.temp}>\r\n                <span>{temp}</span>\r\n              </div>\r\n              <div className={s.icon}>\r\n                <img src={getWeatherIcon(condition, is_day)} alt={condition} />\r\n              </div>\r\n\r\n              <div className={s.feelings}>\r\n                <div className={s.condition}>\r\n                  <span>{condition}</span>\r\n                </div>\r\n                <div className={s.feels}>\r\n                  <span>{`Feels like ${feelsTemp}`}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={s.params}>\r\n              <div className={s.param}>\r\n                <img src={windIcon} alt='wind' />\r\n                <span>{`${wind_mph}m/s, ${wind_dir}`}</span>\r\n              </div>\r\n              <div className={s.param}>\r\n                <img src={humidityIcon} alt='humidity' />\r\n                <span>{humidity}%</span>\r\n              </div>\r\n              <div className={s.param}>\r\n                <img src={pressureIcon} alt='pressure' />\r\n                <span>{pressure_mb}hPa</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={s.hourlyWrap}>\r\n            <Hourly hour={hour} />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Preloader />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { getWeatherIcon } from '../../../services/getWeatherIcon';\r\nimport { transformTemp } from '../../../services/transformTemp';\r\nimport { IForecast } from '../../../types';\r\nimport s from './Card.module.css';\r\n\r\nexport const Card: React.FC<IForecast> = ({ date: dt, hour }) => {\r\n  const date = new Date(dt);\r\n  const day = date.getDate();\r\n  const weekday = date.toLocaleDateString('en', { weekday: 'long' });\r\n  const month = date.toLocaleDateString('en', { month: 'long' });\r\n\r\n  const dayParts = hour.filter(v => {\r\n    const hour = new Date(v.time).getHours();\r\n    return hour === 1 || hour === 8 || hour === 13 || hour === 18;\r\n  });\r\n\r\n  return (\r\n    <div className={s.card}>\r\n      <div className={s.header}>\r\n        <div className={s.date}>\r\n          <div className={s.day}>\r\n            <span>{day}</span>\r\n          </div>\r\n          <div className={s.weekdayMonth}>\r\n            <span>{month},</span>\r\n            <span>{weekday}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={s.main}>\r\n        <span></span>\r\n        <span></span>\r\n        <span className={`${s.title} ${s.condition}`}></span>\r\n        <span className={`${s.title} ${s.pressure}`}>Pressure</span>\r\n        <span className={`${s.title} ${s.humidity}`}>Humidity</span>\r\n        <span className={s.title}>Wind</span>\r\n        <span className={`${s.title} ${s.precipitation}`}>Precipitation</span>\r\n        <span className={`${s.title} ${s.windchill}`}>Windchill</span>\r\n        {dayParts.map(v => {\r\n          const {\r\n            is_day,\r\n            condition: { text: condition },\r\n            time,\r\n            temp_c,\r\n            wind_kph,\r\n            humidity,\r\n            pressure_mb,\r\n            precip_mm,\r\n            windchill_c,\r\n          } = v;\r\n          const hour = new Date(time).getHours();\r\n          const temp = transformTemp(temp_c);\r\n          const wind_mph = (wind_kph / 3.6).toFixed(1);\r\n          const windchill = transformTemp(windchill_c);\r\n          const dayPart =\r\n            hour === 1\r\n              ? 'night'\r\n              : hour === 8\r\n              ? 'morning'\r\n              : hour === 13\r\n              ? 'day'\r\n              : 'evening';\r\n\r\n          return (\r\n            <React.Fragment key={time}>\r\n              <div className={s.tempWrap}>\r\n                <div className={s.dayPart}>{dayPart}</div>\r\n                <div className={s.temp}>\r\n                  <span>{temp}</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={s.icon}>\r\n                <img src={getWeatherIcon(condition, is_day)} alt={condition} />\r\n              </div>\r\n              <div className={s.condition}>\r\n                <span>{condition}</span>\r\n              </div>\r\n              <div className={s.pressure}>\r\n                <span>{pressure_mb}</span>\r\n                <span className={s.unit}>mb</span>\r\n              </div>\r\n              <div className={s.humidity}>\r\n                <span>{humidity}</span>\r\n                <span className={s.unit}>%</span>\r\n              </div>\r\n              <div className={s.wind}>\r\n                <span>{wind_mph}</span>\r\n                <span className={s.unit}>m/s</span>\r\n              </div>\r\n              <div className={s.precipitation}>\r\n                <span>{precip_mm}</span>\r\n                <span className={s.unit}>mm</span>\r\n              </div>\r\n              <div className={`${s.windchill} ${s.temp}`}>\r\n                <span>{windchill}</span>\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useGetWeatherForecastQuery } from '../../api/weatherAPI';\r\nimport { useSelector } from '../../hooks/useSelector';\r\nimport { Card } from './Card/Card';\r\nimport s from './Daily.module.css';\r\n\r\nexport const Daily: React.FC = () => {\r\n  const { coords } = useSelector(s => s.weatherParams);\r\n  const { data } = useGetWeatherForecastQuery({ coords });\r\n  const forecast = data?.forecast.forecastday;\r\n\r\n  return (\r\n    <div className={s.daily}>\r\n      <div className={s.cards}>\r\n        {forecast?.map(day => (\r\n          <Card key={day.date} {...day} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\nimport { useQuery } from '../../hooks/useQuery';\r\nimport { useSelector } from '../../hooks/useSelector';\r\nimport { setCoords } from '../../store/reducers/weatherParamsSlice';\r\nimport { AirQuality } from '../AirQuality/AirQuality';\r\nimport { Astronomy } from '../Astronomy/Astronomy';\r\nimport { Current } from '../Current/Current';\r\nimport { Daily } from '../Daily/Daily';\r\nimport s from './Main.module.css';\r\n\r\nexport const Main: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const query = useQuery();\r\n  const { coords } = useSelector(s => s.weatherParams);\r\n  const lat = Number(query.get('lat')) || coords.lat;\r\n  const lon = Number(query.get('lon')) || coords.lon;\r\n\r\n  useEffect(() => {\r\n    dispatch(setCoords({ lat, lon }));\r\n    setCoords({ lat, lon });\r\n    navigate({ search: `?lat=${lat}&lon=${lon}` });\r\n  }, [lat, lon, navigate, dispatch]);\r\n\r\n  return (\r\n    <main className={s.main}>\r\n      <div className={s.row}>\r\n        <Current />\r\n        <div className={s.col}>\r\n          <Astronomy />\r\n          <AirQuality />\r\n        </div>\r\n      </div>\r\n      <Daily />\r\n    </main>\r\n  );\r\n};\r\n","import { useLocation } from 'react-router';\r\n\r\nexport const useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n","import React, { useEffect } from 'react';\nimport { Navigate, Route, Routes } from 'react-router';\nimport { useSelector } from '../hooks/useSelector';\nimport './App.css';\nimport { Header } from './Header/Header';\nimport { Main } from './Main/Main';\n\nconst App: React.FC = () => {\n  const { city } = useSelector(s => s.weatherParams);\n\n  useEffect(() => {\n    const location = city.split(',')[0];\n    document.title = `Weather in ${\n      location.charAt(0).toUpperCase() + location.slice(1)\n    }`;\n  }, [city]);\n\n  return (\n    <div className='App'>\n      <Header />\n      <div className='container'>\n        <Routes>\n          <Route path='/forecast' element={<Main />} />\n          <Route path='*' element={<Navigate to='/forecast' />} />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { weatherAPI } from '../../api/weatherAPI';\r\nimport { weatherParamsSlice } from './weatherParamsSlice';\r\n\r\nexport const rootReducer = combineReducers({\r\n  [weatherAPI.reducerPath]: weatherAPI.reducer,\r\n  weatherParams: weatherParamsSlice.reducer,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { weatherAPI } from '../api/weatherAPI';\r\nimport { rootReducer } from './reducers/rootReducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware().concat(weatherAPI.middleware),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type RootDispatch = typeof store.dispatch;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename='/weather'>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}